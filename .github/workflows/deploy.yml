name: Deploy to ECS with Docker cache

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ap-northeast-1
  ECR_REPOSITORY: hello-ecs-next
  ECS_CLUSTER: hello-ecs-cluster
  ECS_SERVICE: hello-ecs-service
  CONTAINER_NAME: nextjs

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v3

      - name: ⚡️ Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🧠 Restore Docker cache
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔐 Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: 📦 Build and push Docker image with cache
        uses: docker/build-push-action@v5
        with:
          context: ./frontend                    # ← プロジェクトのルートディレクトリに合わせる
          file: ./frontend/docker/Dockerfile    # ← Dockerfileの実際のパス
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache,mode=max
          platforms: linux/amd64

      - name: 🚀 Update ECS service
        run: |
          aws ecs update-service \
            --cluster $ECS_CLUSTER \
            --service $ECS_SERVICE \
            --force-new-deployment \
            --region $AWS_REGION